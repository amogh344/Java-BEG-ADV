Here are the updated steps for setting up and running a servlet program to display student details on macOS, with a bit of reduction and simplification:

## Step-by-Step Guide for macOS

### Step 1: Set up a Dynamic Web Project
1. **Open Eclipse**.
2. Go to **File > New > Dynamic Web Project**.
3. Enter a project name and click **Next**.
4. Choose a Target Runtime (e.g., Apache Tomcat) and click **Next**.
5. Configure the project settings as desired and click **Finish**.

### Step 2: Create a Servlet
1. Right-click on the `src` folder in your Dynamic Web Project.
2. Go to **New > Servlet**.
3. Enter a package name (or use the default) and specify a name for your servlet.
4. Click **Next**.
5. Configure the servlet settings (such as URL mapping) and click **Next**.
6. Optionally, select the checkboxes to generate `doGet()` and/or `doPost()` methods if you want to handle GET or POST requests.
7. Click **Finish**.

### Step 3: Add Code to the Servlet
1. Open the newly created servlet file.
2. Replace the `doPost()` method with the following code:

```java
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

@WebServlet("/StudentDetailsServlet")
public class StudentDetailsServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Get student details from request parameters
        String name = request.getParameter("name");
        String usn = request.getParameter("usn");
        int totalMarks = Integer.parseInt(request.getParameter("totalMarks"));

        // Calculate percentage
        double percentage = (totalMarks / 600.0) * 100;

        // Set response content type
        response.setContentType("text/html");

        // Get PrintWriter object
        PrintWriter out = response.getWriter();

        // Generate HTML response
        out.println("<html>");
        out.println("<head>");
        out.println("<title>Student Details</title>");
        out.println("</head>");
        out.println("<body>");
        out.println("<h2>Student Details</h2>");
        out.println("<p>Name: " + name + "</p>");
        out.println("<p>USN: " + usn + "</p>");
        out.println("<p>Total Marks: " + totalMarks + "</p>");
        out.println("<p>Percentage: " + percentage + "%</p>");
        out.println("</body>");
        out.println("</html>");
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.getWriter().append("Served at: ").append(request.getContextPath());
    }
}
```

### Step 4: Create an HTML Form
1. Right-click on the `webapp` directory (or `WebContent` in some Eclipse versions).
2. Create a new HTML file named `index.html` and add the following code:

```html
<!DOCTYPE html>
<html>
<head>
    <title>Student Details Form</title>
</head>
<body>
    <h2>Enter Student Details</h2>
    <form action="StudentDetailsServlet" method="post">
        Name: <input type="text" name="name"><br>
        USN: <input type="text" name="usn"><br>
        Total Marks: <input type="number" name="totalMarks"><br>
        <input type="submit" value="Submit">
    </form>
</body>
</html>
```

### Step 5: Run the Servlet
1. Right-click on your project.
2. Go to **Run As > Run on Server**.
3. Choose your server (e.g., Apache Tomcat) and click **Next**.
4. Click **Finish** to deploy and run your application.

### Step 6: Access the Application
1. Open your web browser.
2. Navigate to `http://localhost:8080/YourProjectName/index.html`.

You should now be able to enter student details in the form and see the results displayed by your servlet.
